"""changing some defaults & indices and added request_type to update

Revision ID: 12a25ac9d642
Revises: fdfecfac90da
Create Date: 2025-03-03 09:02:33.483023

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import func

# revision identifiers, used by Alembic.
revision: str = "12a25ac9d642"
down_revision: Union[str, None] = "fdfecfac90da"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "create_location", "create_event", "edit", "delete_event", name="request_type"
    ).create(op.get_bind())
    op.add_column(
        "update_requests",
        sa.Column(
            "request_type",
            postgresql.ENUM(
                "create_location",
                "create_event",
                "edit",
                "delete_event",
                name="request_type",
                create_type=False,
            ),
            nullable=False,
            server_default="edit",
        ),
    )
    # drop default for request_type
    op.alter_column(
        "update_requests",
        "request_type",
        existing_type=sa.Enum(
            "create_location",
            "create_event",
            "edit",
            "delete_event",
            name="request_type",
            create_type=False,
        ),
        nullable=False,
        server_default=None,
    )
    op.alter_column(
        "update_requests",
        "id",
        existing_type=sa.UUID(),
        server_default=func.gen_random_uuid(),
    )
    op.alter_column(
        "update_requests",
        "token",
        existing_type=sa.UUID(),
        server_default=func.gen_random_uuid(),
    )
    op.create_index(
        op.f("idx_events_location_id"),
        "events",
        ["location_id"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_events_org_id"),
        "events",
        ["org_id"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_events_is_active"),
        "events",
        ["is_active"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_events_x_event_types_event_id"),
        "events_x_event_types",
        ["event_id"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_events_x_event_types_event_type_id"),
        "events_x_event_types",
        ["event_type_id"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_locations_org_id"),
        "locations",
        ["org_id"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_locations_name"),
        "locations",
        ["name"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_locations_is_active"),
        "locations",
        ["is_active"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_orgs_parent_id"),
        "orgs",
        ["parent_id"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_orgs_org_type"),
        "orgs",
        ["org_type"],
        unique=False,
        if_not_exists=True,
    )
    op.create_index(
        op.f("idx_orgs_is_active"),
        "orgs",
        ["is_active"],
        unique=False,
        if_not_exists=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("update_requests", "request_type")
    sa.Enum(
        "create_location", "create_event", "edit", "delete_event", name="request_type"
    ).drop(op.get_bind())
    op.drop_index(op.f("idx_orgs_is_active"), table_name="orgs")
    op.drop_index(op.f("idx_orgs_org_type"), table_name="orgs")
    op.drop_index(op.f("idx_orgs_parent_id"), table_name="orgs")
    op.drop_index(op.f("idx_locations_is_active"), table_name="locations")
    op.drop_index(op.f("idx_locations_name"), table_name="locations")
    op.drop_index(op.f("idx_locations_org_id"), table_name="locations")
    op.drop_index(
        op.f("idx_events_x_event_types_event_type_id"),
        table_name="events_x_event_types",
    )
    op.drop_index(
        op.f("idx_events_x_event_types_event_id"), table_name="events_x_event_types"
    )
    op.drop_index(op.f("idx_events_is_active"), table_name="events")
    op.drop_index(op.f("idx_events_org_id"), table_name="events")
    op.drop_index(op.f("idx_events_location_id"), table_name="events")
    # ### end Alembic commands ###
