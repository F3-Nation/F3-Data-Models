"""misc auth and update table changes from Spuds

Revision ID: fdfecfac90da
Revises: e41f29d2b687
Create Date: 2025-02-27 05:36:43.875411

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "fdfecfac90da"
down_revision: Union[str, None] = "e41f29d2b687"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "auth_accounts", "access_token", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "auth_sessions",
        "expires",
        existing_type=sa.DATE(),
        type_=sa.TIMESTAMP(),
        existing_nullable=False,
        postgresql_using="expires::timestamp without time zone",
    )
    op.drop_constraint(
        "auth_sessions_user_id_fkey", "auth_sessions", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "auth_sessions", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column(
        "auth_verification_tokens",
        "expires",
        existing_type=sa.DATE(),
        type_=sa.TIMESTAMP(),
        existing_nullable=False,
        postgresql_using="expires::timestamp without time zone",
    )
    op.alter_column(
        "update_requests",
        "event_recurrence_pattern",
        existing_type=sa.VARCHAR(length=30),
        type_=sa.Enum("weekly", "monthly", name="event_cadence"),
        existing_nullable=True,
        postgresql_using="event_recurrence_pattern::event_cadence",
    )
    op.alter_column(
        "update_requests",
        "location_lat",
        existing_type=sa.REAL(),
        type_=sa.Float(precision=8, decimal_return_scale=5),
        existing_nullable=True,
    )
    op.alter_column(
        "update_requests",
        "location_lng",
        existing_type=sa.REAL(),
        type_=sa.Float(precision=8, decimal_return_scale=5),
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "update_requests",
        "location_lng",
        existing_type=sa.Float(precision=8, decimal_return_scale=5),
        type_=sa.REAL(),
        existing_nullable=True,
    )
    op.alter_column(
        "update_requests",
        "location_lat",
        existing_type=sa.Float(precision=8, decimal_return_scale=5),
        type_=sa.REAL(),
        existing_nullable=True,
    )
    op.alter_column(
        "update_requests",
        "event_recurrence_pattern",
        existing_type=sa.Enum("weekly", "monthly", name="event_cadence"),
        type_=sa.VARCHAR(length=30),
        existing_nullable=True,
    )
    op.alter_column(
        "auth_verification_tokens",
        "expires",
        existing_type=sa.TIMESTAMP(),
        type_=sa.DATE(),
        existing_nullable=False,
        postgresql_using="expires::date",
    )
    op.drop_constraint(
        "auth_sessions_user_id_fkey", "auth_sessions", type_="foreignkey"
    )
    op.create_foreign_key(
        "auth_sessions_user_id_fkey", "auth_sessions", "users", ["user_id"], ["id"]
    )
    op.alter_column(
        "auth_sessions",
        "expires",
        existing_type=sa.TIMESTAMP(),
        type_=sa.DATE(),
        existing_nullable=False,
        postgresql_using="expires::date",
    )
    op.alter_column(
        "auth_accounts", "access_token", existing_type=sa.VARCHAR(), nullable=False
    )
    # ### end Alembic commands ###
