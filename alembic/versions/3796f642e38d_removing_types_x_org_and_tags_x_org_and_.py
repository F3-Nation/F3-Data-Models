"""Removing types_x_org and tags_x_org and adding specific_org_id to each

Revision ID: 3796f642e38d
Revises: f13a2f01845a
Create Date: 2025-02-06 12:42:36.702655

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3796f642e38d"
down_revision: Union[str, None] = "f13a2f01845a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("event_tags_x_org")
    op.drop_table("event_types_x_org")
    op.add_column(
        "event_tags", sa.Column("specific_org_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(None, "event_tags", "orgs", ["specific_org_id"], ["id"])
    op.add_column(
        "event_types", sa.Column("specific_org_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(None, "event_types", "orgs", ["specific_org_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint(None, 'event_types', type_='foreignkey')
    op.drop_column("event_types", "specific_org_id")
    # op.drop_constraint(None, 'event_tags', type_='foreignkey')
    op.drop_column("event_tags", "specific_org_id")
    op.create_table(
        "event_types_x_org",
        sa.Column("event_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("org_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("is_default", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["event_type_id"],
            ["event_types.id"],
            name="event_types_x_org_event_type_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["org_id"], ["orgs.id"], name="event_types_x_org_org_id_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "event_type_id", "org_id", name="event_types_x_org_pkey"
        ),
    )
    op.create_table(
        "event_tags_x_org",
        sa.Column("event_tag_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("org_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("color_override", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["event_tag_id"],
            ["event_tags.id"],
            name="event_tags_x_org_event_tag_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["org_id"], ["orgs.id"], name="event_tags_x_org_org_id_fkey"
        ),
        sa.PrimaryKeyConstraint("event_tag_id", "org_id", name="event_tags_x_org_pkey"),
    )
    # ### end Alembic commands ###
