"""Removing magiclink tables, adding 2nd street to locations and spelling lat lon

Revision ID: f9e62c375bf9
Revises: c92daef11e16
Create Date: 2025-02-03 06:07:27.541924

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f9e62c375bf9"
down_revision: Union[str, None] = "c92daef11e16"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("magiclinkauthrecord")
    op.drop_table("magiclinkauthsession")
    with op.batch_alter_table("locations") as batch_op:
        batch_op.add_column(sa.Column("address_street2", sa.String(), nullable=True))
        batch_op.alter_column("lat", new_column_name="latitude")
        batch_op.alter_column("lon", new_column_name="longitude")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("locations") as batch_op:
        batch_op.alter_column("longitude", new_column_name="lon")
        batch_op.alter_column("latitude", new_column_name="lat")
        batch_op.drop_column("address_street2")
    op.create_table(
        "magiclinkauthsession",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("persistent_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("session_token", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, now())"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "expiration",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, now())"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="magiclinkauthsession_pkey"),
    )
    op.create_table(
        "magiclinkauthrecord",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("email", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("otp_hash", postgresql.BYTEA(), autoincrement=False, nullable=False),
        sa.Column(
            "created",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, now())"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "expiration",
            postgresql.TIMESTAMP(),
            server_default=sa.text("timezone('utc'::text, now())"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("client_ip", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("recent_attempts", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="magiclinkauthrecord_pkey"),
    )
    # ### end Alembic commands ###
